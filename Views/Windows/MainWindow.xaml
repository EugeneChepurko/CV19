<Window x:Class="CV19.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        mc:Ignorable="d"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:local="clr-namespace:CV19"
        xmlns:decanat="clr-namespace:CV19.Models.Decanat"
        xmlns:vm="clr-namespace:CV19.ViewModels"
        xmlns:cmd="clr-namespace:CV19.Infrastructure.Commands" 
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Title="CV19" Height="450" Width="800">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <ResourceDictionary>
         <cmd:CloseApplicationCommand x:Key="CloseApplicationCommand"/>

        
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/Buttons.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Exit" Command="{StaticResource CloseApplicationCommand}"/>
                <!--<MenuItem Header="Exit">
                    <MenuItem.Command>
                        <cmd:CloseApplicationCommand/>
                    </MenuItem.Command>
                </MenuItem>-->
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About software"/>
            </MenuItem>
            <MenuItem Command="{Binding ChangeTabIndexCommand}" CommandParameter="-1">
                <MenuItem.Header>
                    <fa:ImageAwesome Height="12" Icon="ArrowCircleOutlineLeft"></fa:ImageAwesome>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Command="{Binding ChangeTabIndexCommand}" CommandParameter="+1">
                <MenuItem.Header>
                    <fa:ImageAwesome Height="12" Icon="ArrowCircleOutlineRight"></fa:ImageAwesome>
                </MenuItem.Header>
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem MinWidth="150">
                <TextBlock Text="{Binding Status}"></TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <ProgressBar Width="120" Height="14" Value="30"></ProgressBar>
            </StatusBarItem>
            <StatusBarItem Content="{Binding SelectedTabIndex}"></StatusBarItem>
        </StatusBar>
        <TabControl SelectedIndex="{Binding SelectedTabIndex}">
            <TabItem Header="Other data">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <ListBox ItemsSource="{Binding CompositeCollection}" SelectedItem="{Binding SelectedConpositeValue}">
                        <ListBox.Resources>
                            <DataTemplate DataType="{x:Type decanat:Group}">
                                <TextBlock Text="{Binding Name, StringFormat='Group is {0}'}"/>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type decanat:Student}">
                                <TextBlock Text="{Binding Name, StringFormat='Name is {0}'}"/>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type sys:String}">
                                <TextBlock>
                                    <Run Text="my str:" Foreground="Red" FontWeight="Bold"/> <TextBlock Text="{Binding}"/>
                                </TextBlock>
                            </DataTemplate>
                            <DataTemplate DataType="{x:Type sys:Int32}">
                                <TextBlock>
                                    my int32: <TextBlock Text="{Binding}"/>
                                </TextBlock>
                            </DataTemplate>
                        </ListBox.Resources>
                    </ListBox>
                    <GroupBox Header="Selected object" Grid.Column="1">
                        <ContentControl Content="{Binding SelectedConpositeValue}">
                            <ContentControl.Resources>
                                <DataTemplate DataType="{x:Type decanat:Group}">
                                    <TextBlock Text="{Binding Name, StringFormat='Group is {0}'}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="30"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type decanat:Student}">
                                    <TextBlock Text="{Binding Name, StringFormat='Name is {0}'}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="30"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type sys:String}">
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="30">
                                        <Run Text="my str:" Foreground="Red" FontWeight="Bold"/> <TextBlock Text="{Binding}"/>
                                     </TextBlock>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type sys:Int32}">
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="30">
                                        my int32: <TextBlock Text="{Binding}"/>
                                     </TextBlock>
                                </DataTemplate>
                            </ContentControl.Resources>
                        </ContentControl>
                    </GroupBox>
                </Grid>
            </TabItem>

            <TabItem Header="Students">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="230"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>


                    <Border Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="2" BorderBrush="Black" Background="CadetBlue"></Border>
                    <Border Grid.Column="0" Grid.RowSpan="2" BorderThickness="2" BorderBrush="Black"></Border>
                    <Border Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2" BorderThickness="2" BorderBrush="Black"></Border>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  VerticalAlignment="Center">
                        <!--<TextBlock Grid.Row="0" Grid.Column="0" Text="Groups" FontSize="15" FontWeight="Bold" Margin="0,0,5,0"/>-->
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding Groups.Count,StringFormat='Groups [{0}]'}" FontSize="15" FontWeight="Bold"/>
                    </StackPanel>

                    <Grid Grid.Row="1" Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>
                        
                        <DockPanel Grid.Row="0">
                            <DockPanel.Resources>
                                <CollectionViewSource x:Key="CollectionGroup" x:Name="CollectionGroup" Source="{Binding Groups}" Filter="GroupsFilter"/>
                            </DockPanel.Resources>
                            <DockPanel DockPanel.Dock="Top" Margin="2">
                                <fa:ImageAwesome Height="12" Icon="Search" Margin="3"/>
                                <TextBox Name="tbGroups" TextChanged="OnFilterChanged"/>
                            </DockPanel>
                            <ListBox Grid.Column="0" ItemsSource="{Binding Source={StaticResource CollectionGroup}}" SelectedItem="{Binding SelectedGroup}"
                                     VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.IsContainerVirtualizable="True" VirtualizingPanel.VirtualizationMode="Recycling">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.Resources>
                                    <DataTemplate DataType="{x:Type decanat:Group}">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Name}" Name="tbName"/>
                                            <TextBlock Text="{Binding Students.Count, StringFormat='[Students={0}]'}" Margin="15,0,0,0"/>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Students.Count}" Value="0">
                                                <Setter TargetName="tbName" Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.Resources>
                            </ListBox>
                        </DockPanel>
                        <UniformGrid Grid.Row="2" Rows="1" >
                            <Button Style="{StaticResource ButtonCreateStyle}" Command="{Binding CreateGroupCommand}"></Button>
                            <Button Style="{StaticResource ButtonDeleteStyle}" Command="{Binding DeleteGroupCommand}" CommandParameter="{Binding SelectedGroup}"></Button>
                        </UniformGrid>
                        
                    </Grid>
                                  
                    <!--Students-->
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="Students" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="15" FontWeight="Bold"/>

                    <Grid Grid.Row="1" Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal" Grid.Row="0">
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="Selected group:" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="13" FontWeight="Bold" Margin="3,0,5,0"></TextBlock>
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding SelectedGroup.Name, FallbackValue='Group is not selected', TargetNullValue='Group is not selected'}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="13" FontWeight="Bold" Margin="3,0,5,0"></TextBlock>
                        </StackPanel>

                        <DockPanel Grid.Row="1">
                            <DockPanel DockPanel.Dock="Top" Margin="2">
                                <fa:ImageAwesome Height="12" Icon="Search" Margin="3"/>
                                <TextBox />
                            </DockPanel>
                            <DataGrid Grid.Row="1" Grid.Column="1" ItemsSource="{Binding SelectedGroup.Students}" AutoGenerateColumns="False"
                                  GridLinesVisibility="Vertical" VerticalGridLinesBrush="DarkGray" AlternatingRowBackground="LightGray" CanUserAddRows="True">

                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="False"/>
                                    <DataGridTextColumn Header="Surname" Binding="{Binding Surname}" IsReadOnly="False"/>
                                    <DataGridTextColumn Header="Patronymic" Binding="{Binding Patronymic}" IsReadOnly="False"/>
                                    <!--<DataGridTextColumn Header="Birthday" Binding="{Binding Birthday, StringFormat=dd.mm.yyyy}"/>-->
                                    <DataGridTemplateColumn Header="Birthday">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="{x:Type decanat:Student}">
                                                <StackPanel Orientation="Horizontal">
                                                    <fa:ImageAwesome Height="10" Icon="BirthdayCake" Margin="0,0,2,0"/>
                                                    <TextBlock Text="{Binding Birthday}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        <DataGridTemplateColumn.CellEditingTemplate>
                                            <DataTemplate DataType="{x:Type decanat:Student}">
                                                <DatePicker SelectedDate="{Binding Birthday, StringFormat=dd.mm.yyyy}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellEditingTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Rating" Binding="{Binding Rating}"/>
                                    <DataGridTextColumn Header="Notes" Binding="{Binding Description}" Width="*"/>
                                    <!--<DataGridTextColumn Header="Group" Binding="{Binding DataContext.SelectedGroup.Name, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>-->
                                </DataGrid.Columns>
                            </DataGrid>
                        </DockPanel>
                    </Grid>

                </Grid>
            </TabItem>
            <TabItem Header="Diagram">
                <oxy:Plot>
                    <oxy:Plot.Axes>
                        <oxy:LinearAxis Position="Left"/>
                        <oxy:LinearAxis Position="Bottom"/>
                    </oxy:Plot.Axes>
                    <oxy:LineSeries Color="Red" ItemsSource="{Binding TestDataPoints}" DataFieldX="XValue" DataFieldY="YValue"></oxy:LineSeries>
                </oxy:Plot>
            </TabItem>
            <TabItem Header="Tab2">
                <Button Width="150" Height="25" FontWeight="Bold" RenderTransformOrigin="0.5,0.5" Style="{StaticResource ButtonDeleteStyle}">
                    <Button.Background>
                        <SolidColorBrush Color="Salmon" x:Name="colorBrush"/>
                    </Button.Background>
                    <Button.RenderTransform>
                        <RotateTransform x:Name="buttonRotate"/>
                    </Button.RenderTransform>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="buttonRotate" Storyboard.TargetProperty="Angle"
                                                     From="0" To="360" Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="colorBrush" Storyboard.TargetProperty="Color" 
                                                    Duration="0:0:0.1"
                                                    To="#FFDC5A5A" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="colorBrush" Storyboard.TargetProperty="Color" 
                                                    Duration="0:0:1"
                                                    To="#FFF3AA6D"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
            </TabItem>
            <TabItem Header="Virtualization">
                <ListBox HorizontalAlignment="Left" Width="200" Margin="5" ItemsSource="{Binding TestStudents}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type decanat:Student}">
                            <Border BorderBrush="Red" CornerRadius="2" BorderThickness="1" Padding="2">
                                <Border.CacheMode>
                                    <BitmapCache/>
                                </Border.CacheMode>
                                <StackPanel>
                                    <TextBlock Text="{Binding Name}" ToolTip="{Binding Surname}"/>
                                    <TextBlock Text="{Binding Surname}" ToolTip="{Binding Name}"/>
                                    <TextBlock Text="{Binding Patronymic, TargetNullValue=--}" ToolTip="{Binding Surname}"/>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </TabItem>
            <TabItem Header="Tab4"></TabItem>
        </TabControl>
    </DockPanel>
</Window>
